@model BartenderApplication.Models.Orders

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Finalize Your Order!";
}

<h2>Nearly done with your @Model.DrinkTitle order!</h2>

<h4>Customize and finalize your order below:</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Orders" asp-action="CreateOrder" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="NameForOrder" class="control-label"></label>
                <input asp-for="NameForOrder" class="form-control" value="@UserManager.GetUserName(User)" />
                <span asp-validation-for="NameForOrder" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserRequest" class="control-label"></label>
                <textarea asp-for="UserRequest" class="form-control"> </textarea>
                <span asp-validation-for="UserRequest" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DrinkTitle" class="control-label"></label>
                <input asp-for="DrinkTitle" type="text" class="form-control" value="@Model.DrinkTitle" readonly />
                <span asp-validation-for="DrinkTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DrinkQuantity" class="control-label"></label>
                <input asp-for="DrinkQuantity" type="text" class="form-control" value="@Model.DrinkQuantity" readonly />
                <span asp-validation-for="DrinkQuantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalCost" class="control-label"></label>
                <input asp-for="TotalCost" type="text" class="form-control" value="@Model.TotalCost" readonly />
                <span asp-validation-for="TotalCost" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="OrderId" type="hidden" name="OrderId" value="@Model.OrderId" />
                <span asp-validation-for="OrderId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="DrinkId" type="hidden" name="DrinkId" value="@Model.DrinkId" />
                <span asp-validation-for="DrinkId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="AssignedTo" type="hidden" name="AssignedTo" value="@Model.AssignedTo" />
                <span asp-validation-for="AssignedTo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="OpenStatus" type="hidden" name="OpenStatus" value="@Model.OpenStatus" />
                <span asp-validation-for="OpenStatus" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="OrderTime" type="hidden" name="OrderTime" value="@Model.OrderTime" />
                <span asp-validation-for="OrderTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="CloseTime" type="hidden" name="CloseTime" value="@Model.CloseTime" />
                <span asp-validation-for="CloseTime" class="text-danger"></span>
            </div>

            @if (SignInManager.IsSignedIn(User))
            {
                <div class="form-group">
                    <input asp-for="UserId" type="hidden" name="UserId" value="@UserManager.GetUserId(User)" />
                    <span asp-validation-for="UserId" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-group">
                    <input asp-for="UserId" type="hidden" name="UserId" value="@Model.UserId" />
                    <span asp-validation-for="UserId" class="text-danger"></span>
                </div>
            }

            <div class="form-group">
                <input type="submit" value="Complete Order" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Home" asp-action="Index">Back to Menu</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
